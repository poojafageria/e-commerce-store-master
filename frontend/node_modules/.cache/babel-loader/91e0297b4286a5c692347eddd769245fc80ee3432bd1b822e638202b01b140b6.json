{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-max\\\\Desktop\\\\e-commerce-store-master\\\\frontend\\\\src\\\\components\\\\Product.js\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = ({\n  imageUrl,\n  description,\n  price,\n  name,\n  productId\n}) => {\n  const getImageSrc = () => {\n    if (imageUrl.startsWith('http') || imageUrl.startsWith('https')) {\n      // If imageUrl is an online link, return it\n      return imageUrl;\n    } else {\n      // If imageUrl is a filename, construct the path to the local image\n      return `/upload/${imageUrl}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: getImageSrc(),\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info__description\",\n        children: [description.substring(0, 100), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info__price\",\n        children: [\"$\", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/product/${productId}`,\n        className: \"info__button\",\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","Product","imageUrl","description","price","name","productId","getImageSrc","startsWith","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","substring","to","_c","$RefreshReg$"],"sources":["C:/Users/A-max/Desktop/e-commerce-store-master/frontend/src/components/Product.js"],"sourcesContent":["import \"./Product.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Product = ({ imageUrl, description, price, name, productId }) => {\n\n  const getImageSrc = () => {\n    if (imageUrl.startsWith('http') || imageUrl.startsWith('https')) {\n      // If imageUrl is an online link, return it\n      return imageUrl;\n    } else {\n      // If imageUrl is a filename, construct the path to the local image\n      return `/upload/${imageUrl}`;\n    }\n  };\n\n  return (\n    <div className=\"product\">\n      <img src={getImageSrc()} alt={name} />\n\n      <div className=\"product__info\">\n        <p className=\"info__name\">{name}</p>\n\n        <p className=\"info__description\">{description.substring(0, 100)}...</p>\n\n        <p className=\"info__price\">${price}</p>\n\n        <Link to={`/product/${productId}`} className=\"info__button\">\n          View\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n"],"mappings":";AAAA,OAAO,eAAe;AACtB,SAASA,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAErE,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIL,QAAQ,CAACM,UAAU,CAAC,MAAM,CAAC,IAAIN,QAAQ,CAACM,UAAU,CAAC,OAAO,CAAC,EAAE;MAC/D;MACA,OAAON,QAAQ;IACjB,CAAC,MAAM;MACL;MACA,OAAQ,WAAUA,QAAS,EAAC;IAC9B;EACF,CAAC;EAED,oBACEF,OAAA;IAAKS,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBV,OAAA;MAAKW,GAAG,EAAEJ,WAAW,CAAC,CAAE;MAACK,GAAG,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtChB,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BV,OAAA;QAAGS,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEL;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpChB,OAAA;QAAGS,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAAEP,WAAW,CAACc,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAG;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEvEhB,OAAA;QAAGS,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,GAAC,EAACN,KAAK;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEvChB,OAAA,CAACF,IAAI;QAACoB,EAAE,EAAG,YAAWZ,SAAU,EAAE;QAACG,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAE5D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GA7BIlB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}